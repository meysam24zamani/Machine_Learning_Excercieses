setwd("D:/Spain-Barcelona/UPC/third Semester/ML/Lab3/L03/L03")
set.seed(2222)
set.seed(2222)
par(mfrow=c(1, 1))
library(PolynomF)
library(PolynomF)
N <- 10
f <- function(x) sin(2 * pi * x)  # this is the (unknown) target function and the best solution to our problem
View(f)
x <- runif(N)                     # generate the x according to a uniform distribution p(x)
N <- 10
f <- function(x) sin(2 * pi * x)  # this is the (unknown) target function and the best solution to our problem
x <- runif(N)                     # generate the x according to a uniform distribution p(x)
t <- f(x) + rnorm(N, sd=0.2)      # generate the t according to a gaussian conditional distribution p(t|x)
## Plot the available data sample (what we observe)
plot(data.frame(x, t),ylim=c(-1.25,1.25))
## Plot the deterministic part (unknown in practice, and the best possible solution = the regression function)
curve(f, type="l", col="green", add=TRUE)
## Fitting polynomials is easy in R with the poly() function
## this is a 1-degree polynomial (a line)
polyfit <- lm(t ~ poly(x, 1, raw=TRUE))
## We will be analysing this summary output next session ... though probably you can understand many things
summary(polyfit)
View(polyfit)
## Now let us fit a bunch of polynomials of different degrees
par(mfrow=c(2, 3))
for (i in c(1, 2, 3, 4, 6, 9))
{
plot(data.frame(x, t), xlab=paste("Polynomial fit of degree", i), ylab="f(x)",ylim=c(-1.25,1.25))
curve(f, type="l", col="green", add=TRUE)
polyfit <- lm(t ~ poly(x, i, raw=TRUE))
p <- polynom(coef(polyfit))
curve(p, col="red", add=TRUE)
}
for (i in c(1, 2, 3, 4, 6, 9))
{
plot(data.frame(x, t), xlab=paste("Polynomial fit of degree", i), ylab="f(x)",ylim=c(-2.25,2.25))
curve(f, type="l", col="green", add=TRUE)
polyfit <- lm(t ~ poly(x, i, raw=TRUE))
p <- polynom(coef(polyfit))
curve(p, col="red", add=TRUE)
}
for (i in c(1, 2, 3, 4, 6, 9))
{
plot(data.frame(x, t), xlab=paste("Polynomial fit of degree", i), ylab="f(x)",ylim=c(-5.25,5.25))
curve(f, type="l", col="green", add=TRUE)
polyfit <- lm(t ~ poly(x, i, raw=TRUE))
p <- polynom(coef(polyfit))
curve(p, col="red", add=TRUE)
}
for (i in c(1, 2, 3, 4, 6, 9))
{
plot(data.frame(x, t), xlab=paste("Polynomial fit of degree", i), ylab="f(x)",ylim=c(-10,10))
curve(f, type="l", col="green", add=TRUE)
polyfit <- lm(t ~ poly(x, i, raw=TRUE))
p <- polynom(coef(polyfit))
curve(p, col="red", add=TRUE)
}
for (i in c(1, 2, 3, 4, 6, 9))
{
plot(data.frame(x, t), xlab=paste("Polynomial fit of degree", i), ylab="f(x)",ylim=c(-1.25,1.25))
curve(f, type="l", col="green", add=TRUE)
polyfit <- lm(t ~ poly(x, i, raw=TRUE))
p <- polynom(coef(polyfit))
curve(p, col="red", add=TRUE)
}
par(mfrow=c(2, 5))
for (i in 1:10)
{
x <- runif(N)
t <- f(x) + rnorm(N, sd=0.2)
plot(data.frame(x, t), xlab=paste("Polynomial fit of degree 1, data sample", i), ylab="f(x)",xlim=c(0,1),ylim=c(-1.25,1.25))
curve(f, type="l", col="green", add=TRUE)
polyfit <- lm(t ~ poly(x, 1, raw=TRUE))
p <- polynom(coef(polyfit))
curve(p, col="red", add=TRUE)
}
